// workflows/nextflow.config

// Globals
params.input = "data/test_reads.fastq.gz"
params.output_dir = "results"
params.repo_owner = params.repo_owner ?: 'bio-comp'
params.cutadapt_tag = params.cutadapt_tag ?: '5.1'

// Global logging env for every task
env {
    LOG_LEVEL = 'INFO'
    LOG_FORMAT = 'json'
    LOG_CONTEXT_VARS = 'pod_name=HOSTNAME,run_name=NXF_RUNNAME,process=NXF_PROCESS,task_name=NXF_TASK_NAME'
}

// Visibility
timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}
report {
    enabled = true
    file = "${params.output_dir}/report.html"
}
trace {
    enabled = true
    file = "${params.output_dir}/trace.tsv"
    sep = '\t'
    // Choose the fields you care about when correlating with logs:
    fields = 'task_id,process,tag,attempt,exit,status,hash,submit,start,complete,duration,realtime,%cpu,cpus,peak_rss,peak_vmem,read_bytes,write_bytes,container'
}
dag {
    enabled = true
    file = "${params.output_dir}/flowchart.svg"
}
process {
    publishDir = [path: params.output_dir, mode: 'copy']
}
// Profiles
profiles {

    docker {
        docker.enabled = true

        // default executor when this profile is active
        process.executor = 'local'

        process {
            // Apply only to these processes
            withName: 'TRIM_SE|TRIM_PE' {
                errorStrategy = 'retry'
                maxRetries = 2
                maxForks = 8
                container = "ghcr.io/${params.repo_owner}/cutadapt:${params.cutadapt_tag}"
                cpus = 2
                memory = '2 GB'
            }
        }
    }

    k8s {
        process.executor = 'k8s'
        workDir = "s3://bucket-name/nextflow-work"
        wave.enabled = false
        process.scratch = false
        //docker.enabled = true
        // Mounts / other K8s specifics
        // k8s { storageClaimName = 'the-pvc'; storageMountPath = '/workspace' }
        aws {
            region = 'us-east-1'

            client {
                maxErrorRetry = 2
                maxConnections = 64
                connectionTimeout = 10000
                socketTimeout = 60000
            }
        }
        process {
            withName: 'TRIM_SE|TRIM_PE' {
                pod = [
                    [env: 'LOG_LEVEL', value: 'INFO'],
                    [env: 'LOG_FORMAT', value: 'json'],
                    [env: 'POD_NAME', valueFrom: [fieldRef: [fieldPath: 'metadata.name']]],
                    [env: 'POD_UID', valueFrom: [fieldRef: [fieldPath: 'metadata.uid']]],
                    [env: 'NODE_NAME', valueFrom: [fieldRef: [fieldPath: 'spec.nodeName']]],
                    [env: 'NAMESPACE', valueFrom: [fieldRef: [fieldPath: 'metadata.namespace']]],
                ]
                cpus = 2
                memory = '2 GB'
                container = "ghcr.io/${params.repo_owner}/cutadapt:${params.cutadapt_tag}"
            }
        }
    }
}
